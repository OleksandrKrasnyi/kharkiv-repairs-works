#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from datetime import datetime

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import SQLALCHEMY_DATABASE_URL, Base
from models import RepairWork, WorkType


def reset_database():
    """–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("=== –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===")

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    db_file = "./db/app.db"
    if os.path.exists(db_file):
        print(f"1. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_file}")
        try:
            os.remove(db_file)
            print("‚úì –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
            return False
    else:
        print("1. –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ë–î, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    db_dir = os.path.dirname(db_file)
    if not os.path.exists(db_dir):
        print(f"2. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {db_dir}")
        os.makedirs(db_dir, exist_ok=True)
        print("‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    else:
        print("2. –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ë–î
    engine = create_engine(
        SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False}
    )
    Base.metadata.create_all(bind=engine)
    print("‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã —Ä–∞–±–æ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_work_types = [
            WorkType(
                name="–†–µ–º–æ–Ω—Ç –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è",
                description="–ê—Å—Ñ–∞–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —è–º–æ—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç, —É–∫–ª–∞–¥–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è",
                color="#ff6b6b",
            ),
            WorkType(
                name="–†–µ–º–æ–Ω—Ç —Ç—Ä–æ—Ç—É–∞—Ä—ñ–≤",
                description="–ó–∞–º—ñ–Ω–∞ –ø–ª–∏—Ç–∫–∏, –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è, —Ä–µ–º–æ–Ω—Ç –±–æ—Ä–¥—é—Ä—ñ–≤",
                color="#4ecdc4",
            ),
            WorkType(
                name="–í–æ–¥–æ–ø—Ä–æ–≤—ñ–¥–Ω—ñ —Ä–æ–±–æ—Ç–∏",
                description="–†–µ–º–æ–Ω—Ç –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥—É, –∑–∞–º—ñ–Ω–∞ —Ç—Ä—É–±, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤",
                color="#45b7d1",
            ),
            WorkType(
                name="–ï–ª–µ–∫—Ç—Ä–æ–º–µ—Ä–µ–∂—ñ",
                description="–†–µ–º–æ–Ω—Ç –ª—ñ–Ω—ñ–π –µ–ª–µ–∫—Ç—Ä–æ–ø–µ—Ä–µ–¥–∞—á, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è",
                color="#f9ca24",
            ),
            WorkType(
                name="–ö–∞–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è",
                description="–†–µ–º–æ–Ω—Ç –∫–∞–Ω–∞–ª—ñ–∑–∞—Ü—ñ–π–Ω–∏—Ö —Å–∏—Å—Ç–µ–º, –ø—Ä–æ—á–∏—â–µ–Ω–Ω—è –∑–∞—Å–æ—Ä—ñ–≤",
                color="#8b4513",
            ),
            WorkType(
                name="–û–∑–µ–ª–µ–Ω–µ–Ω–Ω—è",
                description="–ü–æ—Å–∞–¥–∫–∞ –¥–µ—Ä–µ–≤, –æ–±–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–ª—É–º–±, –ø—ñ–¥—Ä—ñ–∑–∫–∞",
                color="#2ed573",
            ),
            WorkType(
                name="–î–æ—Ä–æ–∂–Ω—è —Ä–æ–∑–º—ñ—Ç–∫–∞",
                description="–ù–∞–Ω–µ—Å–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ç–∫–∏, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤",
                color="#333333",
            ),
            WorkType(
                name="–ë–ª–∞–≥–æ—É—Å—Ç—Ä—ñ–π",
                description="–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–∞–≤–æ–∫, —É—Ä–Ω, –¥–∏—Ç—è—á–∏—Ö –º–∞–π–¥–∞–Ω—á–∏–∫—ñ–≤",
                color="#ff9ff3",
            ),
        ]

        for work_type in default_work_types:
            db.add(work_type)

        db.commit()
        print(f"‚úì –î–æ–¥–∞–Ω–æ {len(default_work_types)} —Ç–∏–ø—ñ–≤ —Ä–æ–±—ñ—Ç –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º")

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç
        sample_works = [
            RepairWork(
                location="49.991500,36.231400",
                description="–†–µ–º–æ–Ω—Ç –¥–æ—Ä–æ–∂–Ω—å–æ–≥–æ –ø–æ–∫—Ä–∏—Ç—Ç—è –Ω–∞ –≤—É–ª. –°—É–º—Å—å–∫–∞",
                start_datetime=datetime(2024, 1, 15, 9, 0),
                end_datetime=datetime(2024, 1, 20, 18, 0),
                work_type_id=1,
            ),
            RepairWork(
                start_location="49.988200,36.233100",
                end_location="49.990100,36.235800",
                description="–ó–∞–º—ñ–Ω–∞ –≤–æ–¥–æ–ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö —Ç—Ä—É–± –Ω–∞ –≤—É–ª. –ü—É—à–∫—ñ–Ω—Å—å–∫–∞",
                start_datetime=datetime(2024, 1, 10, 8, 0),
                work_type_id=3,
            ),
            RepairWork(
                location="49.996800,36.228900",
                description="–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –ª—ñ—Ö—Ç–∞—Ä—ñ–≤ —É –ø–∞—Ä–∫—É –ì–æ—Ä—å–∫–æ–≥–æ",
                start_datetime=datetime(2024, 1, 5, 10, 0),
                end_datetime=datetime(2024, 1, 8, 16, 0),
                work_type_id=4,
            ),
        ]

        for work in sample_works:
            db.add(work)

        db.commit()
        print(f"‚úì –î–æ–¥–∞–Ω–æ {len(sample_works)} –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ —Ä–µ–º–æ–Ω—Ç–Ω–∏—Ö —Ä–æ–±—ñ—Ç")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö: {str(e)}")
        db.rollback()
    finally:
        db.close()

    print("\n=== –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞ ===")
    print("=" * 50)
    print("–ë–ê–ó–ê –î–ê–ù–ù–´–• –£–°–ü–Ü–®–ù–û –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–ê!")
    print("=" * 50)
    print("–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ—é:")
    print("python main.py")
    print("=" * 50)
    return True


def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ===")

    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    engine = create_engine(
        SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False}
    )
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–æ—á–∫—É
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç–æ—á–∫–∏...")
        point_work = RepairWork(
            location="49.9935,36.2304",
            description="–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–º–æ–Ω—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ - —Ç–æ—á–∫–∞",
            start_datetime=datetime.now(),
        )
        db.add(point_work)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
        print("2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞...")
        route_work = RepairWork(
            start_location="49.9935,36.2304",
            end_location="49.9945,36.2314",
            description="–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–º–æ–Ω—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ - –º–∞—Ä—à—Ä—É—Ç",
            start_datetime=datetime.now(),
        )
        db.add(route_work)

        db.commit()
        print("‚úì –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        all_works = db.query(RepairWork).all()
        print(f"‚úì –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {len(all_works)}")

        for work in all_works:
            print(f"  - ID: {work.id}")
            print(f"    –û–ø–∏—Å–∞–Ω–∏–µ: {work.description}")
            if work.location:
                print(f"    –¢–æ—á–∫–∞: {work.location}")
            else:
                print(f"    –ú–∞—Ä—à—Ä—É—Ç: {work.start_location} -> {work.end_location}")
            print(f"    –ù–∞—á–∞–ª–æ: {work.start_datetime}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
        return False
    finally:
        db.close()


if __name__ == "__main__":
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if reset_database():
        print("\n" + "=" * 50)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        if create_test_data():
            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
            print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–µ—Ä:")
            print("python main.py")
        else:
            print("\n‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
    else:
        print("\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
        sys.exit(1)
